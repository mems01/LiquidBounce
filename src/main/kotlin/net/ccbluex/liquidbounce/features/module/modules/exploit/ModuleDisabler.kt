/*
 * This file is part of LiquidBounce (https://github.com/CCBlueX/LiquidBounce)
 *
 * Copyright (c) 2016 - 2022 CCBlueX
 *
 * LiquidBounce is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LiquidBounce is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LiquidBounce. If not, see <https://www.gnu.org/licenses/>.
 */

package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.config.NamedChoice
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.minecraft.network.packet.c2s.play.KeepAliveC2SPacket
import net.minecraft.network.packet.c2s.play.PlayPongC2SPacket
import net.minecraft.network.packet.c2s.play.PlayerInputC2SPacket
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket
import kotlin.random.Random

/**
 * A disabler module
 *
 * Disables either a specific anticheat or server.
 */

object ModuleDisabler : Module("Disabler", Category.EXPLOIT) {

    private val modes by enumChoice("Mode", DisablerMode.MINEPLEX, DisablerMode.values())

    val packetHandler = handler<PacketEvent> {
        when (modes) {
            DisablerMode.MINEPLEX -> {
                if (it.packet is KeepAliveC2SPacket) {
                    it.packet.id -= Random.nextInt(1000, Int.MAX_VALUE)
                }
            }
            DisablerMode.AACOLD -> {
                if (it.packet is PlayerMoveC2SPacket) {
                    network.sendPacket(PlayerInputC2SPacket(0f, 0f, false, false))
                    it.packet.y += 7.0E-9
                }
            }
            DisablerMode.VERUS -> {
                if (it.packet is PlayPongC2SPacket) {
                    if (player.isDead) {
                        return@handler
                    }

                    it.cancelEvent()
                }
            }
        }
    }

    enum class DisablerMode(override val choiceName: String) : NamedChoice {
        MINEPLEX("Mineplex"), AACOLD("AAC1.9.10"), VERUS("Verus")
    }
}
